目录/9,Black,notBold,notItalic,open,FitWidth,176
第1章 初识HotSpot/12,Black,notBold,notItalic,open,FitWidth,146
第2章 启动/39,Black,notBold,notItalic,closed,FitWidth,142
	2.1 HotSpot内核/39,Black,notBold,notItalic,open,FitWidth,663
		2.1.1 如何阅读代码/39,Black,notBold,notItalic,open,FitWidth,787
		2.1.2 HotSpot内核框架/47,Black,notBold,notItalic,open,FitWidth,100
		2.1.3 Prims/48,Black,notBold,notItalic,open,FitWidth,178
		2.1.4 Services/50,Black,notBold,notItalic,open,FitWidth,364
		2.1.5 Runtime/54,Black,notBold,notItalic,open,FitWidth,764
		2.2 启动/57,Black,notBold,notItalic,open,FitWidth,373
			2.2.1 Launcher/57,Black,notBold,notItalic,open,FitWidth,490
			2.2.2 虚拟机生命周期/59,Black,notBold,notItalic,open,FitWidth,818
			2.2.3 入口：main函数/61,Black,notBold,notItalic,open,FitWidth,800
			2.2.4 主线程/62,Black,notBold,notItalic,open,FitWidth,661
			2.2.5 InitializeJVM/64,Black,notBold,notItalic,open,FitWidth,609
			2.2.6 JNI_CreateJavaVM函数/66,Black,notBold,notItalic,open,FitWidth,632
			2.2.7 调用Java主方法/67,Black,notBold,notItalic,open,FitWidth,164
			2.2.8 JVM退出路径/67,Black,notBold,notItalic,open,FitWidth,709
			2.3 系统初始化/68,Black,notBold,notItalic,closed,FitWidth,515
				2.3.1 配置OS模块/69,Black,notBold,notItalic,open,FitWidth,753
				2.3.2 配置系统属性/71,Black,notBold,notItalic,open,FitWidth,572
				2.3.3 加载系统库/72,Black,notBold,notItalic,open,FitWidth,374
				2.3.4 启动线程/73,Black,notBold,notItalic,open,FitWidth,99
					1. 线程状态和类型/73,Black,notBold,notItalic,open,FitWidth,172
					2. 创建主线程/74,Black,notBold,notItalic,open,FitWidth,466
					3. 创建VMThread/75,Black,notBold,notItalic,open,FitWidth,582
					4. 创建守护线程/76,Black,notBold,notItalic,open,FitWidth,212
				2.3.5 vm_init_globals函数：初始化全局数据结构/76,Black,notBold,notItalic,open,FitWidth,316
				2.3.6 init_globals函数：初始化全局模块/76,Black,notBold,notItalic,open,FitWidth,837
					1. JMX：Management模块/77,Black,notBold,notItalic,open,FitWidth,828
					2. Code Cache/78,Black,notBold,notItalic,open,FitWidth,740
					3. StubRoutines/79,Black,notBold,notItalic,open,FitWidth,159
					4. Universe/79,Black,notBold,notItalic,open,FitWidth,320
					5. 解释器/79,Black,notBold,notItalic,open,FitWidth,445
					6. 模板表/79,Black,notBold,notItalic,open,FitWidth,545
					7. stubs/79,Black,notBold,notItalic,open,FitWidth,631
			2.4 小结/80,Black,notBold,notItalic,open,FitWidth,164
			2.4 小结/80,Black,notBold,notItalic,open,FitWidth,168
			第3章 类与对象/81,Black,notBold,notItalic,closed,FitWidth,144
				3.1 对象表示机制/82,Black,notBold,notItalic,closed,FitWidth,88
					3.1.1 OOP-Klass二分模型/82,Black,notBold,notItalic,open,FitWidth,268
					3.1.2 Oops模块/82,Black,notBold,notItalic,open,FitWidth,806
					3.1.3 OOP框架与对象访问机制/84,Black,notBold,notItalic,open,FitWidth,463
					3.1.4 Klass与instanceKlass/90,Black,notBold,notItalic,open,FitWidth,129
						1. 核心数据结构：Klass/90,Black,notBold,notItalic,open,FitWidth,693
						2. 核心数据结构：instanceKlass/92,Black,notBold,notItalic,open,FitWidth,452
						3. 实例数据的存储顺序/93,Black,notBold,notItalic,open,FitWidth,601
					3.1.5 实战：用HSDB调试HotSpot/93,Black,notBold,notItalic,open,FitWidth,806
				3.2 类的状态转化/98,Black,notBold,notItalic,closed,FitWidth,380
					3.2.1 入口：Class文件/98,Black,notBold,notItalic,closed,FitWidth,661
						1. 常量池/100,Black,notBold,notItalic,open,FitWidth,88
						2. 字段表/101,Black,notBold,notItalic,open,FitWidth,83
						3. 方法表/101,Black,notBold,notItalic,open,FitWidth,724
						4. 属性表/102,Black,notBold,notItalic,open,FitWidth,207
					3.2.2 类的状态/103,Black,notBold,notItalic,closed,FitWidth,406
						1. JVM内部定义的类状态/103,Black,notBold,notItalic,open,FitWidth,484
						2. 跟踪内部过程/104,Black,notBold,notItalic,open,FitWidth,658
						3. 性能统计/105,Black,notBold,notItalic,open,FitWidth,448
					3.2.3 加载/107,Black,notBold,notItalic,closed,FitWidth,798
						1. 初始化类加载器/107,Black,notBold,notItalic,open,FitWidth,824
						2. 加载/109,Black,notBold,notItalic,open,FitWidth,353
					3.2.4 链接/112,Black,notBold,notItalic,closed,FitWidth,390
						1. 验证/113,Black,notBold,notItalic,open,FitWidth,770
						2. 准备/114,Black,notBold,notItalic,open,FitWidth,585
						3. 解析/114,Black,notBold,notItalic,open,FitWidth,713
					3.2.5 初始化/115,Black,notBold,notItalic,open,FitWidth,759
					3.2.6 实战：类的“族谱”/118,Black,notBold,notItalic,open,FitWidth,515
					3.2.7 实战：系统字典/122,Black,notBold,notItalic,open,FitWidth,171
				3.3 创建对象/124,Black,notBold,notItalic,closed,FitWidth,777
					3.3.1 实例对象的创建流程/125,Black,notBold,notItalic,open,FitWidth,131
						1. 快速分配/126,Black,notBold,notItalic,open,FitWidth,100
						2. 慢速分配/127,Black,notBold,notItalic,open,FitWidth,96
					3.2.2 实战：探测JVM内部对象/127,Black,notBold,notItalic,open,FitWidth,480
				3.4 小结/130,Black,notBold,notItalic,open,FitWidth,132
			第4章 运行时数据区/131,Black,notBold,notItalic,closed,FitWidth,178
				4.1 堆/132,Black,notBold,notItalic,closed,FitWidth,711
					4.1.1 Java的自动内存管理/132,Black,notBold,notItalic,open,FitWidth,821
					4.1.2 堆的管理/133,Black,notBold,notItalic,open,FitWidth,227
						1. 分代/133,Black,notBold,notItalic,open,FitWidth,766
						2. Universe模块/134,Black,notBold,notItalic,open,FitWidth,376
				4.2 线程私有区域/136,Black,notBold,notItalic,closed,FitWidth,520
					4.2.1 PC/136,Black,notBold,notItalic,open,FitWidth,725
					4.2.2 JVM栈/137,Black,notBold,notItalic,open,FitWidth,233
				4.3 方法区/137,Black,notBold,notItalic,closed,FitWidth,695
					4.3.1 纽带作用/138,Black,notBold,notItalic,open,FitWidth,382
					4.3.2 常量池/141,Black,notBold,notItalic,open,FitWidth,572
					4.3.3 常量池缓存：ConstntPoolCache/144,Black,notBold,notItalic,open,FitWidth,148
					4.3.4 方法的表示：methodOop/145,Black,notBold,notItalic,open,FitWidth,835
						1. Class文件的方法表/146,Black,notBold,notItalic,open,FitWidth,164
						2. methodOop/147,Black,notBold,notItalic,open,FitWidth,313
						3. instanceKlass中的方法表/148,Black,notBold,notItalic,open,FitWidth,749
					4.3.5 方法的解析：将符号引用转换成直接引用/149,Black,notBold,notItalic,open,FitWidth,539
						1. 何时触发解析/149,Black,notBold,notItalic,open,FitWidth,539
						2. 解析类方法/150,Black,notBold,notItalic,open,FitWidth,483
						4. 解析接口方法/151,Black,notBold,notItalic,open,FitWidth,555
					4.3.6 代码放在哪里： ConstMethodOop/152,Black,notBold,notItalic,open,FitWidth,627
					4.3.7 实战：探测运行时常量池/153,Black,notBold,notItalic,open,FitWidth,827
				4.4 性能监控数据区：Perf Data/158,Black,notBold,notItalic,closed,FitWidth,86
					4.4.1 描述这段空间：PerfMemory/158,Black,notBold,notItalic,open,FitWidth,290
					4.4.2 查看/159,Black,notBold,notItalic,open,FitWidth,491
					4.4.3 生产/161,Black,notBold,notItalic,open,FitWidth,174
				4.5 转储/162,Black,notBold,notItalic,closed,FitWidth,374
					4.5.1 用VisualVM进行转储分析/162,Black,notBold,notItalic,open,FitWidth,579
					4.5.2 JVM Crash/164,Black,notBold,notItalic,open,FitWidth,518
						1. 头部信息/165,Black,notBold,notItalic,open,FitWidth,362
						2. 线程信息/166,Black,notBold,notItalic,open,FitWidth,230
						3. 进程信息/167,Black,notBold,notItalic,open,FitWidth,507
				4.6 小结/169,Black,notBold,notItalic,open,FitWidth,522
			第5章 垃圾收集/170,Black,notBold,notItalic,open,FitWidth,185
				5.1 堆与GC/171,Black,notBold,notItalic,closed,FitWidth,180
					5.1.1 垃圾收集/171,Black,notBold,notItalic,open,FitWidth,334
						1. 垃圾收集器/171,Black,notBold,notItalic,open,FitWidth,410
						2. 收集算法/172,Black,notBold,notItalic,open,FitWidth,251
					5.1.2 分代收集/173,Black,notBold,notItalic,open,FitWidth,92
						1. 分代与分代收集/173,Black,notBold,notItalic,open,FitWidth,298
						2. 分代模型/175,Black,notBold,notItalic,open,FitWidth,569
					5.1.3 快速分配/176,Black,notBold,notItalic,open,FitWidth,821
					5.1.4 栈上分配和逸出分析/178,Black,notBold,notItalic,open,FitWidth,478
					5.1.5 GC公共模块/178,Black,notBold,notItalic,open,FitWidth,709
						1. CollectedHeap/179,Black,notBold,notItalic,open,FitWidth,120
						2. GCCause模块/179,Black,notBold,notItalic,open,FitWidth,274
						3. VM_Operation、VM_GC_Operation和VM_CMS_Operation/180,Black,notBold,notItalic,open,FitWidth,140
						4. MutableSpace模块/181,Black,notBold,notItalic,open,FitWidth,162
						5. ConcurrentGCThread模块/181,Black,notBold,notItalic,open,FitWidth,162
						6. MarkSweep模块/181,Black,notBold,notItalic,open,FitWidth,162
				5.2 垃圾收集器/181,Black,notBold,notItalic,closed,FitWidth,470
					5.2.1 设计演进/181,Black,notBold,notItalic,closed,FitWidth,649
						1. 串行收集器：Serial/182,Black,notBold,notItalic,open,FitWidth,669
						2. 并行收集器：ParNew/183,Black,notBold,notItalic,open,FitWidth,126
						3. 吞吐量优先收集器：Parallel Scanvenge/183,Black,notBold,notItalic,open,FitWidth,562
						4. 堆的类型/184,Black,notBold,notItalic,open,FitWidth,813
						5. 收集策略/185,Black,notBold,notItalic,open,FitWidth,706
					5.2.2 CMS收集器/186,Black,notBold,notItalic,closed,FitWidth,598
						1. 如何找到垃圾-可达性分析/187,Black,notBold,notItalic,open,FitWidth,389
						2. 夹缝中寻找出路/189,Black,notBold,notItalic,open,FitWidth,763
					5.2.3 G1收集器/191,Black,notBold,notItalic,closed,FitWidth,481
						1. 何时使用G1/192,Black,notBold,notItalic,open,FitWidth,66
						2. 核心思路：Region/192,Black,notBold,notItalic,open,FitWidth,373
						3. Remembered Sets与Collection Sets/194,Black,notBold,notItalic,open,FitWidth,210
						4. GC工作过程/194,Black,notBold,notItalic,open,FitWidth,697
				5.3 实战：性能分析方法/195,Black,notBold,notItalic,closed,FitWidth,436
					5.3.1 获取GC日志/195,Black,notBold,notItalic,open,FitWidth,641
					5.3.2 GC监控信息/198,Black,notBold,notItalic,open,FitWidth,473
					5.3.3 内存分析工具/200,Black,notBold,notItalic,open,FitWidth,130
						1. 堆转储分析/200,Black,notBold,notItalic,open,FitWidth,130
						2. GUI工具/200,Black,notBold,notItalic,open,FitWidth,130
					5.3.4 选择合适的收集器与GC性能评估/201,Black,notBold,notItalic,open,FitWidth,305
						1. GC基本配置/201,Black,notBold,notItalic,open,FitWidth,305
						2. 量体裁衣的原则/201,Black,notBold,notItalic,open,FitWidth,792
						3. 选择CMS/203,Black,notBold,notItalic,open,FitWidth,218
						4. 选择G1和性能评估方法/204,Black,notBold,notItalic,open,FitWidth,521
					5.3.5 不要忽略JVM Crash日志/206,Black,notBold,notItalic,open,FitWidth,178
				5.4 小结/207,Black,notBold,notItalic,open,FitWidth,430
			第6章 栈/208,Black,notBold,notItalic,open,FitWidth,92
				6.1 硬件背景：了解真实机器/209,Black,notBold,notItalic,open,FitWidth,113
					6.1.1 程序是如何运行的/209,Black,notBold,notItalic,open,FitWidth,113
					6.1.2 x86与栈帧/210,Black,notBold,notItalic,open,FitWidth,364
					6.1.3 ARM对Java硬件级加速：Jazelle技术/213,Black,notBold,notItalic,open,FitWidth,632
				6.2 Java栈/214,Black,notBold,notItalic,closed,FitWidth,421
					6.2.1 寄存器式指令集与栈式指令集/214,Black,notBold,notItalic,open,FitWidth,421
					6.2.2 HotSpot中的栈/215,Black,notBold,notItalic,open,FitWidth,391
						1. 栈帧/215,Black,notBold,notItalic,open,FitWidth,724
						2. 局部变量区/216,Black,notBold,notItalic,open,FitWidth,642
						3. 操作数栈/218,Black,notBold,notItalic,open,FitWidth,94
					6.2.3 栈帧/218,Black,notBold,notItalic,open,FitWidth,735
						1. 如何描述运行时栈帧的运动/218,Black,notBold,notItalic,open,FitWidth,837
						2. 方法入口/220,Black,notBold,notItalic,open,FitWidth,212
						3. 帧内元素位置/220,Black,notBold,notItalic,open,FitWidth,832
					6.2.4 充分利用寄存器资源/221,Black,notBold,notItalic,open,FitWidth,443
					6.2.5 虚拟机如何调用Java函数/223,Black,notBold,notItalic,open,FitWidth,766
						1. 入口：JavaCalls/224,Black,notBold,notItalic,open,FitWidth,72
						2. 实际例程：CallStub/225,Black,notBold,notItalic,open,FitWidth,298
						3. Stub Routines/225,Black,notBold,notItalic,open,FitWidth,579
						4. CallStub的运行过程/228,Black,notBold,notItalic,open,FitWidth,107
					6.2.6 优化：栈顶缓存/232,Black,notBold,notItalic,open,FitWidth,142
					6.2.7 实战：操作数栈/234,Black,notBold,notItalic,open,FitWidth,363
						1. 操作数栈/234,Black,notBold,notItalic,open,FitWidth,440
						2. 栈的运动/235,Black,notBold,notItalic,open,FitWidth,669
						3. breakpoint的codelet/236,Black,notBold,notItalic,open,FitWidth,690
						4. add栈帧/237,Black,notBold,notItalic,open,FitWidth,431
						5. main的局部变量表/238,Black,notBold,notItalic,open,FitWidth,277
				6.3 小结/239,Black,notBold,notItalic,open,FitWidth,616
			第7章 解释器和即时编译器/240,Black,notBold,notItalic,open,FitWidth,183
				7.1 概述/241,Black,notBold,notItalic,open,FitWidth,264
					1. 解释器/242,Black,notBold,notItalic,open,FitWidth,104
					2. JIT编译器/242,Black,notBold,notItalic,open,FitWidth,463
				7.2 解释器如何工作/242,Black,notBold,notItalic,open,FitWidth,822
					7.2.1 Interpreter模块/243,Black,notBold,notItalic,open,FitWidth,227
					7.2.2 Code模块/245,Black,notBold,notItalic,open,FitWidth,218
					7.2.3 字节码表/246,Black,notBold,notItalic,open,FitWidth,110
					7.2.4 Code Cache/247,Black,notBold,notItalic,open,FitWidth,337
					7.2.5 InterpreterCodelet与Stub队列/250,Black,notBold,notItalic,open,FitWidth,322
						1. InterpreterCodelet/250,Black,notBold,notItalic,open,FitWidth,476
						2. 创建Codelets/251,Black,notBold,notItalic,open,FitWidth,395
					7.2.6 Code生成器/252,Black,notBold,notItalic,open,FitWidth,661
					7.2.7 模板表与转发表/255,Black,notBold,notItalic,open,FitWidth,301
						1. 模板/255,Black,notBold,notItalic,open,FitWidth,429
						2. 创建模板表/256,Black,notBold,notItalic,open,FitWidth,629
		2.3 系统初始化/68,Black,notBold,notItalic,closed,FitWidth,515
			2.3.1 配置OS模块/69,Black,notBold,notItalic,open,FitWidth,753
			2.3.2 配置系统属性/71,Black,notBold,notItalic,open,FitWidth,572
			2.3.3 加载系统库/72,Black,notBold,notItalic,open,FitWidth,374
			2.3.4 启动线程/73,Black,notBold,notItalic,open,FitWidth,99
				1. 线程状态和类型/73,Black,notBold,notItalic,open,FitWidth,172
				2. 创建主线程/74,Black,notBold,notItalic,open,FitWidth,466
				3. 创建VMThread/75,Black,notBold,notItalic,open,FitWidth,582
				4. 创建守护线程/76,Black,notBold,notItalic,open,FitWidth,212
			2.3.5 vm_init_globals函数：初始化全局数据结构/76,Black,notBold,notItalic,open,FitWidth,316
			2.3.6 init_globals函数：初始化全局模块/76,Black,notBold,notItalic,open,FitWidth,837
				1. JMX：Management模块/77,Black,notBold,notItalic,open,FitWidth,828
				2. Code Cache/78,Black,notBold,notItalic,open,FitWidth,740
				3. StubRoutines/79,Black,notBold,notItalic,open,FitWidth,159
				4. Universe/79,Black,notBold,notItalic,open,FitWidth,320
				5. 解释器/79,Black,notBold,notItalic,open,FitWidth,445
				6. 模板表/79,Black,notBold,notItalic,open,FitWidth,545
				7. stubs/79,Black,notBold,notItalic,open,FitWidth,631
		2.4 小结/80,Black,notBold,notItalic,open,FitWidth,164
		2.4 小结/80,Black,notBold,notItalic,open,FitWidth,168
		第3章 类与对象/81,Black,notBold,notItalic,closed,FitWidth,144
			3.1 对象表示机制/82,Black,notBold,notItalic,closed,FitWidth,88
				3.1.1 OOP-Klass二分模型/82,Black,notBold,notItalic,open,FitWidth,268
				3.1.2 Oops模块/82,Black,notBold,notItalic,open,FitWidth,806
				3.1.3 OOP框架与对象访问机制/84,Black,notBold,notItalic,open,FitWidth,463
				3.1.4 Klass与instanceKlass/90,Black,notBold,notItalic,open,FitWidth,129
					1. 核心数据结构：Klass/90,Black,notBold,notItalic,open,FitWidth,693
					2. 核心数据结构：instanceKlass/92,Black,notBold,notItalic,open,FitWidth,452
					3. 实例数据的存储顺序/93,Black,notBold,notItalic,open,FitWidth,601
				3.1.5 实战：用HSDB调试HotSpot/93,Black,notBold,notItalic,open,FitWidth,806
			3.2 类的状态转化/98,Black,notBold,notItalic,closed,FitWidth,380
				3.2.1 入口：Class文件/98,Black,notBold,notItalic,closed,FitWidth,661
					1. 常量池/100,Black,notBold,notItalic,open,FitWidth,88
					2. 字段表/101,Black,notBold,notItalic,open,FitWidth,83
					3. 方法表/101,Black,notBold,notItalic,open,FitWidth,724
					4. 属性表/102,Black,notBold,notItalic,open,FitWidth,207
				3.2.2 类的状态/103,Black,notBold,notItalic,closed,FitWidth,406
					1. JVM内部定义的类状态/103,Black,notBold,notItalic,open,FitWidth,484
					2. 跟踪内部过程/104,Black,notBold,notItalic,open,FitWidth,658
					3. 性能统计/105,Black,notBold,notItalic,open,FitWidth,448
				3.2.3 加载/107,Black,notBold,notItalic,closed,FitWidth,798
					1. 初始化类加载器/107,Black,notBold,notItalic,open,FitWidth,824
					2. 加载/109,Black,notBold,notItalic,open,FitWidth,353
				3.2.4 链接/112,Black,notBold,notItalic,closed,FitWidth,390
					1. 验证/113,Black,notBold,notItalic,open,FitWidth,770
					2. 准备/114,Black,notBold,notItalic,open,FitWidth,585
					3. 解析/114,Black,notBold,notItalic,open,FitWidth,713
				3.2.5 初始化/115,Black,notBold,notItalic,open,FitWidth,759
				3.2.6 实战：类的“族谱”/118,Black,notBold,notItalic,open,FitWidth,515
				3.2.7 实战：系统字典/122,Black,notBold,notItalic,open,FitWidth,171
			3.3 创建对象/124,Black,notBold,notItalic,closed,FitWidth,777
				3.3.1 实例对象的创建流程/125,Black,notBold,notItalic,open,FitWidth,131
					1. 快速分配/126,Black,notBold,notItalic,open,FitWidth,100
					2. 慢速分配/127,Black,notBold,notItalic,open,FitWidth,96
				3.2.2 实战：探测JVM内部对象/127,Black,notBold,notItalic,open,FitWidth,480
			3.4 小结/130,Black,notBold,notItalic,open,FitWidth,132
		第4章 运行时数据区/131,Black,notBold,notItalic,closed,FitWidth,178
			4.1 堆/132,Black,notBold,notItalic,closed,FitWidth,711
				4.1.1 Java的自动内存管理/132,Black,notBold,notItalic,open,FitWidth,821
				4.1.2 堆的管理/133,Black,notBold,notItalic,open,FitWidth,227
					1. 分代/133,Black,notBold,notItalic,open,FitWidth,766
					2. Universe模块/134,Black,notBold,notItalic,open,FitWidth,376
			4.2 线程私有区域/136,Black,notBold,notItalic,closed,FitWidth,520
				4.2.1 PC/136,Black,notBold,notItalic,open,FitWidth,725
				4.2.2 JVM栈/137,Black,notBold,notItalic,open,FitWidth,233
			4.3 方法区/137,Black,notBold,notItalic,closed,FitWidth,695
				4.3.1 纽带作用/138,Black,notBold,notItalic,open,FitWidth,382
				4.3.2 常量池/141,Black,notBold,notItalic,open,FitWidth,572
				4.3.3 常量池缓存：ConstntPoolCache/144,Black,notBold,notItalic,open,FitWidth,148
				4.3.4 方法的表示：methodOop/145,Black,notBold,notItalic,open,FitWidth,835
					1. Class文件的方法表/146,Black,notBold,notItalic,open,FitWidth,164
					2. methodOop/147,Black,notBold,notItalic,open,FitWidth,313
					3. instanceKlass中的方法表/148,Black,notBold,notItalic,open,FitWidth,749
				4.3.5 方法的解析：将符号引用转换成直接引用/149,Black,notBold,notItalic,open,FitWidth,539
					1. 何时触发解析/149,Black,notBold,notItalic,open,FitWidth,539
					2. 解析类方法/150,Black,notBold,notItalic,open,FitWidth,483
					4. 解析接口方法/151,Black,notBold,notItalic,open,FitWidth,555
				4.3.6 代码放在哪里： ConstMethodOop/152,Black,notBold,notItalic,open,FitWidth,627
				4.3.7 实战：探测运行时常量池/153,Black,notBold,notItalic,open,FitWidth,827
			4.4 性能监控数据区：Perf Data/158,Black,notBold,notItalic,closed,FitWidth,86
				4.4.1 描述这段空间：PerfMemory/158,Black,notBold,notItalic,open,FitWidth,290
				4.4.2 查看/159,Black,notBold,notItalic,open,FitWidth,491
				4.4.3 生产/161,Black,notBold,notItalic,open,FitWidth,174
			4.5 转储/162,Black,notBold,notItalic,closed,FitWidth,374
				4.5.1 用VisualVM进行转储分析/162,Black,notBold,notItalic,open,FitWidth,579
				4.5.2 JVM Crash/164,Black,notBold,notItalic,open,FitWidth,518
					1. 头部信息/165,Black,notBold,notItalic,open,FitWidth,362
					2. 线程信息/166,Black,notBold,notItalic,open,FitWidth,230
					3. 进程信息/167,Black,notBold,notItalic,open,FitWidth,507
			4.6 小结/169,Black,notBold,notItalic,open,FitWidth,522
		第5章 垃圾收集/170,Black,notBold,notItalic,open,FitWidth,185
			5.1 堆与GC/171,Black,notBold,notItalic,closed,FitWidth,180
				5.1.1 垃圾收集/171,Black,notBold,notItalic,open,FitWidth,334
					1. 垃圾收集器/171,Black,notBold,notItalic,open,FitWidth,410
					2. 收集算法/172,Black,notBold,notItalic,open,FitWidth,251
				5.1.2 分代收集/173,Black,notBold,notItalic,open,FitWidth,92
					1. 分代与分代收集/173,Black,notBold,notItalic,open,FitWidth,298
					2. 分代模型/175,Black,notBold,notItalic,open,FitWidth,569
				5.1.3 快速分配/176,Black,notBold,notItalic,open,FitWidth,821
				5.1.4 栈上分配和逸出分析/178,Black,notBold,notItalic,open,FitWidth,478
				5.1.5 GC公共模块/178,Black,notBold,notItalic,open,FitWidth,709
					1. CollectedHeap/179,Black,notBold,notItalic,open,FitWidth,120
					2. GCCause模块/179,Black,notBold,notItalic,open,FitWidth,274
					3. VM_Operation、VM_GC_Operation和VM_CMS_Operation/180,Black,notBold,notItalic,open,FitWidth,140
					4. MutableSpace模块/181,Black,notBold,notItalic,open,FitWidth,162
					5. ConcurrentGCThread模块/181,Black,notBold,notItalic,open,FitWidth,162
					6. MarkSweep模块/181,Black,notBold,notItalic,open,FitWidth,162
			5.2 垃圾收集器/181,Black,notBold,notItalic,closed,FitWidth,470
				5.2.1 设计演进/181,Black,notBold,notItalic,closed,FitWidth,649
					1. 串行收集器：Serial/182,Black,notBold,notItalic,open,FitWidth,669
					2. 并行收集器：ParNew/183,Black,notBold,notItalic,open,FitWidth,126
					3. 吞吐量优先收集器：Parallel Scanvenge/183,Black,notBold,notItalic,open,FitWidth,562
					4. 堆的类型/184,Black,notBold,notItalic,open,FitWidth,813
					5. 收集策略/185,Black,notBold,notItalic,open,FitWidth,706
				5.2.2 CMS收集器/186,Black,notBold,notItalic,closed,FitWidth,598
					1. 如何找到垃圾-可达性分析/187,Black,notBold,notItalic,open,FitWidth,389
					2. 夹缝中寻找出路/189,Black,notBold,notItalic,open,FitWidth,763
				5.2.3 G1收集器/191,Black,notBold,notItalic,closed,FitWidth,481
					1. 何时使用G1/192,Black,notBold,notItalic,open,FitWidth,66
					2. 核心思路：Region/192,Black,notBold,notItalic,open,FitWidth,373
					3. Remembered Sets与Collection Sets/194,Black,notBold,notItalic,open,FitWidth,210
					4. GC工作过程/194,Black,notBold,notItalic,open,FitWidth,697
			5.3 实战：性能分析方法/195,Black,notBold,notItalic,closed,FitWidth,436
				5.3.1 获取GC日志/195,Black,notBold,notItalic,open,FitWidth,641
				5.3.2 GC监控信息/198,Black,notBold,notItalic,open,FitWidth,473
				5.3.3 内存分析工具/200,Black,notBold,notItalic,open,FitWidth,130
					1. 堆转储分析/200,Black,notBold,notItalic,open,FitWidth,130
					2. GUI工具/200,Black,notBold,notItalic,open,FitWidth,130
				5.3.4 选择合适的收集器与GC性能评估/201,Black,notBold,notItalic,open,FitWidth,305
					1. GC基本配置/201,Black,notBold,notItalic,open,FitWidth,305
					2. 量体裁衣的原则/201,Black,notBold,notItalic,open,FitWidth,792
					3. 选择CMS/203,Black,notBold,notItalic,open,FitWidth,218
					4. 选择G1和性能评估方法/204,Black,notBold,notItalic,open,FitWidth,521
				5.3.5 不要忽略JVM Crash日志/206,Black,notBold,notItalic,open,FitWidth,178
			5.4 小结/207,Black,notBold,notItalic,open,FitWidth,430
		第6章 栈/208,Black,notBold,notItalic,open,FitWidth,92
			6.1 硬件背景：了解真实机器/209,Black,notBold,notItalic,open,FitWidth,113
				6.1.1 程序是如何运行的/209,Black,notBold,notItalic,open,FitWidth,113
				6.1.2 x86与栈帧/210,Black,notBold,notItalic,open,FitWidth,364
				6.1.3 ARM对Java硬件级加速：Jazelle技术/213,Black,notBold,notItalic,open,FitWidth,632
			6.2 Java栈/214,Black,notBold,notItalic,closed,FitWidth,421
				6.2.1 寄存器式指令集与栈式指令集/214,Black,notBold,notItalic,open,FitWidth,421
				6.2.2 HotSpot中的栈/215,Black,notBold,notItalic,open,FitWidth,391
					1. 栈帧/215,Black,notBold,notItalic,open,FitWidth,724
					2. 局部变量区/216,Black,notBold,notItalic,open,FitWidth,642
					3. 操作数栈/218,Black,notBold,notItalic,open,FitWidth,94
				6.2.3 栈帧/218,Black,notBold,notItalic,open,FitWidth,735
					1. 如何描述运行时栈帧的运动/218,Black,notBold,notItalic,open,FitWidth,837
					2. 方法入口/220,Black,notBold,notItalic,open,FitWidth,212
					3. 帧内元素位置/220,Black,notBold,notItalic,open,FitWidth,832
				6.2.4 充分利用寄存器资源/221,Black,notBold,notItalic,open,FitWidth,443
				6.2.5 虚拟机如何调用Java函数/223,Black,notBold,notItalic,open,FitWidth,766
					1. 入口：JavaCalls/224,Black,notBold,notItalic,open,FitWidth,72
					2. 实际例程：CallStub/225,Black,notBold,notItalic,open,FitWidth,298
					3. Stub Routines/225,Black,notBold,notItalic,open,FitWidth,579
					4. CallStub的运行过程/228,Black,notBold,notItalic,open,FitWidth,107
				6.2.6 优化：栈顶缓存/232,Black,notBold,notItalic,open,FitWidth,142
				6.2.7 实战：操作数栈/234,Black,notBold,notItalic,open,FitWidth,363
					1. 操作数栈/234,Black,notBold,notItalic,open,FitWidth,440
					2. 栈的运动/235,Black,notBold,notItalic,open,FitWidth,669
					3. breakpoint的codelet/236,Black,notBold,notItalic,open,FitWidth,690
					4. add栈帧/237,Black,notBold,notItalic,open,FitWidth,431
					5. main的局部变量表/238,Black,notBold,notItalic,open,FitWidth,277
			6.3 小结/239,Black,notBold,notItalic,open,FitWidth,616
		第7章 解释器和即时编译器/240,Black,notBold,notItalic,open,FitWidth,183
			7.1 概述/241,Black,notBold,notItalic,open,FitWidth,264
				1. 解释器/242,Black,notBold,notItalic,open,FitWidth,104
				2. JIT编译器/242,Black,notBold,notItalic,open,FitWidth,463
			7.2 解释器如何工作/242,Black,notBold,notItalic,open,FitWidth,822
				7.2.1 Interpreter模块/243,Black,notBold,notItalic,open,FitWidth,227
				7.2.2 Code模块/245,Black,notBold,notItalic,open,FitWidth,218
				7.2.3 字节码表/246,Black,notBold,notItalic,open,FitWidth,110
				7.2.4 Code Cache/247,Black,notBold,notItalic,open,FitWidth,337
				7.2.5 InterpreterCodelet与Stub队列/250,Black,notBold,notItalic,open,FitWidth,322
					1. InterpreterCodelet/250,Black,notBold,notItalic,open,FitWidth,476
					2. 创建Codelets/251,Black,notBold,notItalic,open,FitWidth,395
				7.2.6 Code生成器/252,Black,notBold,notItalic,open,FitWidth,661
				7.2.7 模板表与转发表/255,Black,notBold,notItalic,open,FitWidth,301
					1. 模板/255,Black,notBold,notItalic,open,FitWidth,429
					2. 创建模板表/256,Black,notBold,notItalic,open,FitWidth,629
	2.2 启动/57,Black,notBold,notItalic,open,FitWidth,373
		2.2.1 Launcher/57,Black,notBold,notItalic,open,FitWidth,490
		2.2.2 虚拟机生命周期/59,Black,notBold,notItalic,open,FitWidth,818
		2.2.3 入口：main函数/61,Black,notBold,notItalic,open,FitWidth,800
		2.2.4 主线程/62,Black,notBold,notItalic,open,FitWidth,661
		2.2.5 InitializeJVM/64,Black,notBold,notItalic,open,FitWidth,609
		2.2.6 JNI_CreateJavaVM函数/66,Black,notBold,notItalic,open,FitWidth,632
		2.2.7 调用Java主方法/67,Black,notBold,notItalic,open,FitWidth,164
		2.2.8 JVM退出路径/67,Black,notBold,notItalic,open,FitWidth,709
		2.3 系统初始化/68,Black,notBold,notItalic,closed,FitWidth,515
			2.3.1 配置OS模块/69,Black,notBold,notItalic,open,FitWidth,753
			2.3.2 配置系统属性/71,Black,notBold,notItalic,open,FitWidth,572
			2.3.3 加载系统库/72,Black,notBold,notItalic,open,FitWidth,374
			2.3.4 启动线程/73,Black,notBold,notItalic,open,FitWidth,99
				1. 线程状态和类型/73,Black,notBold,notItalic,open,FitWidth,172
				2. 创建主线程/74,Black,notBold,notItalic,open,FitWidth,466
				3. 创建VMThread/75,Black,notBold,notItalic,open,FitWidth,582
				4. 创建守护线程/76,Black,notBold,notItalic,open,FitWidth,212
			2.3.5 vm_init_globals函数：初始化全局数据结构/76,Black,notBold,notItalic,open,FitWidth,316
			2.3.6 init_globals函数：初始化全局模块/76,Black,notBold,notItalic,open,FitWidth,837
				1. JMX：Management模块/77,Black,notBold,notItalic,open,FitWidth,828
				2. Code Cache/78,Black,notBold,notItalic,open,FitWidth,740
				3. StubRoutines/79,Black,notBold,notItalic,open,FitWidth,159
				4. Universe/79,Black,notBold,notItalic,open,FitWidth,320
				5. 解释器/79,Black,notBold,notItalic,open,FitWidth,445
				6. 模板表/79,Black,notBold,notItalic,open,FitWidth,545
				7. stubs/79,Black,notBold,notItalic,open,FitWidth,631
		2.4 小结/80,Black,notBold,notItalic,open,FitWidth,164
		2.4 小结/80,Black,notBold,notItalic,open,FitWidth,168
		第3章 类与对象/81,Black,notBold,notItalic,closed,FitWidth,144
			3.1 对象表示机制/82,Black,notBold,notItalic,closed,FitWidth,88
				3.1.1 OOP-Klass二分模型/82,Black,notBold,notItalic,open,FitWidth,268
				3.1.2 Oops模块/82,Black,notBold,notItalic,open,FitWidth,806
				3.1.3 OOP框架与对象访问机制/84,Black,notBold,notItalic,open,FitWidth,463
				3.1.4 Klass与instanceKlass/90,Black,notBold,notItalic,open,FitWidth,129
					1. 核心数据结构：Klass/90,Black,notBold,notItalic,open,FitWidth,693
					2. 核心数据结构：instanceKlass/92,Black,notBold,notItalic,open,FitWidth,452
					3. 实例数据的存储顺序/93,Black,notBold,notItalic,open,FitWidth,601
				3.1.5 实战：用HSDB调试HotSpot/93,Black,notBold,notItalic,open,FitWidth,806
			3.2 类的状态转化/98,Black,notBold,notItalic,closed,FitWidth,380
				3.2.1 入口：Class文件/98,Black,notBold,notItalic,closed,FitWidth,661
					1. 常量池/100,Black,notBold,notItalic,open,FitWidth,88
					2. 字段表/101,Black,notBold,notItalic,open,FitWidth,83
					3. 方法表/101,Black,notBold,notItalic,open,FitWidth,724
					4. 属性表/102,Black,notBold,notItalic,open,FitWidth,207
				3.2.2 类的状态/103,Black,notBold,notItalic,closed,FitWidth,406
					1. JVM内部定义的类状态/103,Black,notBold,notItalic,open,FitWidth,484
					2. 跟踪内部过程/104,Black,notBold,notItalic,open,FitWidth,658
					3. 性能统计/105,Black,notBold,notItalic,open,FitWidth,448
				3.2.3 加载/107,Black,notBold,notItalic,closed,FitWidth,798
					1. 初始化类加载器/107,Black,notBold,notItalic,open,FitWidth,824
					2. 加载/109,Black,notBold,notItalic,open,FitWidth,353
				3.2.4 链接/112,Black,notBold,notItalic,closed,FitWidth,390
					1. 验证/113,Black,notBold,notItalic,open,FitWidth,770
					2. 准备/114,Black,notBold,notItalic,open,FitWidth,585
					3. 解析/114,Black,notBold,notItalic,open,FitWidth,713
				3.2.5 初始化/115,Black,notBold,notItalic,open,FitWidth,759
				3.2.6 实战：类的“族谱”/118,Black,notBold,notItalic,open,FitWidth,515
				3.2.7 实战：系统字典/122,Black,notBold,notItalic,open,FitWidth,171
			3.3 创建对象/124,Black,notBold,notItalic,closed,FitWidth,777
				3.3.1 实例对象的创建流程/125,Black,notBold,notItalic,open,FitWidth,131
					1. 快速分配/126,Black,notBold,notItalic,open,FitWidth,100
					2. 慢速分配/127,Black,notBold,notItalic,open,FitWidth,96
				3.2.2 实战：探测JVM内部对象/127,Black,notBold,notItalic,open,FitWidth,480
			3.4 小结/130,Black,notBold,notItalic,open,FitWidth,132
		第4章 运行时数据区/131,Black,notBold,notItalic,closed,FitWidth,178
			4.1 堆/132,Black,notBold,notItalic,closed,FitWidth,711
				4.1.1 Java的自动内存管理/132,Black,notBold,notItalic,open,FitWidth,821
				4.1.2 堆的管理/133,Black,notBold,notItalic,open,FitWidth,227
					1. 分代/133,Black,notBold,notItalic,open,FitWidth,766
					2. Universe模块/134,Black,notBold,notItalic,open,FitWidth,376
			4.2 线程私有区域/136,Black,notBold,notItalic,closed,FitWidth,520
				4.2.1 PC/136,Black,notBold,notItalic,open,FitWidth,725
				4.2.2 JVM栈/137,Black,notBold,notItalic,open,FitWidth,233
			4.3 方法区/137,Black,notBold,notItalic,closed,FitWidth,695
				4.3.1 纽带作用/138,Black,notBold,notItalic,open,FitWidth,382
				4.3.2 常量池/141,Black,notBold,notItalic,open,FitWidth,572
				4.3.3 常量池缓存：ConstntPoolCache/144,Black,notBold,notItalic,open,FitWidth,148
				4.3.4 方法的表示：methodOop/145,Black,notBold,notItalic,open,FitWidth,835
					1. Class文件的方法表/146,Black,notBold,notItalic,open,FitWidth,164
					2. methodOop/147,Black,notBold,notItalic,open,FitWidth,313
					3. instanceKlass中的方法表/148,Black,notBold,notItalic,open,FitWidth,749
				4.3.5 方法的解析：将符号引用转换成直接引用/149,Black,notBold,notItalic,open,FitWidth,539
					1. 何时触发解析/149,Black,notBold,notItalic,open,FitWidth,539
					2. 解析类方法/150,Black,notBold,notItalic,open,FitWidth,483
					4. 解析接口方法/151,Black,notBold,notItalic,open,FitWidth,555
				4.3.6 代码放在哪里： ConstMethodOop/152,Black,notBold,notItalic,open,FitWidth,627
				4.3.7 实战：探测运行时常量池/153,Black,notBold,notItalic,open,FitWidth,827
			4.4 性能监控数据区：Perf Data/158,Black,notBold,notItalic,closed,FitWidth,86
				4.4.1 描述这段空间：PerfMemory/158,Black,notBold,notItalic,open,FitWidth,290
				4.4.2 查看/159,Black,notBold,notItalic,open,FitWidth,491
				4.4.3 生产/161,Black,notBold,notItalic,open,FitWidth,174
			4.5 转储/162,Black,notBold,notItalic,closed,FitWidth,374
				4.5.1 用VisualVM进行转储分析/162,Black,notBold,notItalic,open,FitWidth,579
				4.5.2 JVM Crash/164,Black,notBold,notItalic,open,FitWidth,518
					1. 头部信息/165,Black,notBold,notItalic,open,FitWidth,362
					2. 线程信息/166,Black,notBold,notItalic,open,FitWidth,230
					3. 进程信息/167,Black,notBold,notItalic,open,FitWidth,507
			4.6 小结/169,Black,notBold,notItalic,open,FitWidth,522
		第5章 垃圾收集/170,Black,notBold,notItalic,open,FitWidth,185
			5.1 堆与GC/171,Black,notBold,notItalic,closed,FitWidth,180
				5.1.1 垃圾收集/171,Black,notBold,notItalic,open,FitWidth,334
					1. 垃圾收集器/171,Black,notBold,notItalic,open,FitWidth,410
					2. 收集算法/172,Black,notBold,notItalic,open,FitWidth,251
				5.1.2 分代收集/173,Black,notBold,notItalic,open,FitWidth,92
					1. 分代与分代收集/173,Black,notBold,notItalic,open,FitWidth,298
					2. 分代模型/175,Black,notBold,notItalic,open,FitWidth,569
				5.1.3 快速分配/176,Black,notBold,notItalic,open,FitWidth,821
				5.1.4 栈上分配和逸出分析/178,Black,notBold,notItalic,open,FitWidth,478
				5.1.5 GC公共模块/178,Black,notBold,notItalic,open,FitWidth,709
					1. CollectedHeap/179,Black,notBold,notItalic,open,FitWidth,120
					2. GCCause模块/179,Black,notBold,notItalic,open,FitWidth,274
					3. VM_Operation、VM_GC_Operation和VM_CMS_Operation/180,Black,notBold,notItalic,open,FitWidth,140
					4. MutableSpace模块/181,Black,notBold,notItalic,open,FitWidth,162
					5. ConcurrentGCThread模块/181,Black,notBold,notItalic,open,FitWidth,162
					6. MarkSweep模块/181,Black,notBold,notItalic,open,FitWidth,162
			5.2 垃圾收集器/181,Black,notBold,notItalic,closed,FitWidth,470
				5.2.1 设计演进/181,Black,notBold,notItalic,closed,FitWidth,649
					1. 串行收集器：Serial/182,Black,notBold,notItalic,open,FitWidth,669
					2. 并行收集器：ParNew/183,Black,notBold,notItalic,open,FitWidth,126
					3. 吞吐量优先收集器：Parallel Scanvenge/183,Black,notBold,notItalic,open,FitWidth,562
					4. 堆的类型/184,Black,notBold,notItalic,open,FitWidth,813
					5. 收集策略/185,Black,notBold,notItalic,open,FitWidth,706
				5.2.2 CMS收集器/186,Black,notBold,notItalic,closed,FitWidth,598
					1. 如何找到垃圾-可达性分析/187,Black,notBold,notItalic,open,FitWidth,389
					2. 夹缝中寻找出路/189,Black,notBold,notItalic,open,FitWidth,763
				5.2.3 G1收集器/191,Black,notBold,notItalic,closed,FitWidth,481
					1. 何时使用G1/192,Black,notBold,notItalic,open,FitWidth,66
					2. 核心思路：Region/192,Black,notBold,notItalic,open,FitWidth,373
					3. Remembered Sets与Collection Sets/194,Black,notBold,notItalic,open,FitWidth,210
					4. GC工作过程/194,Black,notBold,notItalic,open,FitWidth,697
			5.3 实战：性能分析方法/195,Black,notBold,notItalic,closed,FitWidth,436
				5.3.1 获取GC日志/195,Black,notBold,notItalic,open,FitWidth,641
				5.3.2 GC监控信息/198,Black,notBold,notItalic,open,FitWidth,473
				5.3.3 内存分析工具/200,Black,notBold,notItalic,open,FitWidth,130
					1. 堆转储分析/200,Black,notBold,notItalic,open,FitWidth,130
					2. GUI工具/200,Black,notBold,notItalic,open,FitWidth,130
				5.3.4 选择合适的收集器与GC性能评估/201,Black,notBold,notItalic,open,FitWidth,305
					1. GC基本配置/201,Black,notBold,notItalic,open,FitWidth,305
					2. 量体裁衣的原则/201,Black,notBold,notItalic,open,FitWidth,792
					3. 选择CMS/203,Black,notBold,notItalic,open,FitWidth,218
					4. 选择G1和性能评估方法/204,Black,notBold,notItalic,open,FitWidth,521
				5.3.5 不要忽略JVM Crash日志/206,Black,notBold,notItalic,open,FitWidth,178
			5.4 小结/207,Black,notBold,notItalic,open,FitWidth,430
		第6章 栈/208,Black,notBold,notItalic,open,FitWidth,92
			6.1 硬件背景：了解真实机器/209,Black,notBold,notItalic,open,FitWidth,113
				6.1.1 程序是如何运行的/209,Black,notBold,notItalic,open,FitWidth,113
				6.1.2 x86与栈帧/210,Black,notBold,notItalic,open,FitWidth,364
				6.1.3 ARM对Java硬件级加速：Jazelle技术/213,Black,notBold,notItalic,open,FitWidth,632
			6.2 Java栈/214,Black,notBold,notItalic,closed,FitWidth,421
				6.2.1 寄存器式指令集与栈式指令集/214,Black,notBold,notItalic,open,FitWidth,421
				6.2.2 HotSpot中的栈/215,Black,notBold,notItalic,open,FitWidth,391
					1. 栈帧/215,Black,notBold,notItalic,open,FitWidth,724
					2. 局部变量区/216,Black,notBold,notItalic,open,FitWidth,642
					3. 操作数栈/218,Black,notBold,notItalic,open,FitWidth,94
				6.2.3 栈帧/218,Black,notBold,notItalic,open,FitWidth,735
					1. 如何描述运行时栈帧的运动/218,Black,notBold,notItalic,open,FitWidth,837
					2. 方法入口/220,Black,notBold,notItalic,open,FitWidth,212
					3. 帧内元素位置/220,Black,notBold,notItalic,open,FitWidth,832
				6.2.4 充分利用寄存器资源/221,Black,notBold,notItalic,open,FitWidth,443
				6.2.5 虚拟机如何调用Java函数/223,Black,notBold,notItalic,open,FitWidth,766
					1. 入口：JavaCalls/224,Black,notBold,notItalic,open,FitWidth,72
					2. 实际例程：CallStub/225,Black,notBold,notItalic,open,FitWidth,298
					3. Stub Routines/225,Black,notBold,notItalic,open,FitWidth,579
					4. CallStub的运行过程/228,Black,notBold,notItalic,open,FitWidth,107
				6.2.6 优化：栈顶缓存/232,Black,notBold,notItalic,open,FitWidth,142
				6.2.7 实战：操作数栈/234,Black,notBold,notItalic,open,FitWidth,363
					1. 操作数栈/234,Black,notBold,notItalic,open,FitWidth,440
					2. 栈的运动/235,Black,notBold,notItalic,open,FitWidth,669
					3. breakpoint的codelet/236,Black,notBold,notItalic,open,FitWidth,690
					4. add栈帧/237,Black,notBold,notItalic,open,FitWidth,431
					5. main的局部变量表/238,Black,notBold,notItalic,open,FitWidth,277
			6.3 小结/239,Black,notBold,notItalic,open,FitWidth,616
		第7章 解释器和即时编译器/240,Black,notBold,notItalic,open,FitWidth,183
			7.1 概述/241,Black,notBold,notItalic,open,FitWidth,264
				1. 解释器/242,Black,notBold,notItalic,open,FitWidth,104
				2. JIT编译器/242,Black,notBold,notItalic,open,FitWidth,463
			7.2 解释器如何工作/242,Black,notBold,notItalic,open,FitWidth,822
				7.2.1 Interpreter模块/243,Black,notBold,notItalic,open,FitWidth,227
				7.2.2 Code模块/245,Black,notBold,notItalic,open,FitWidth,218
				7.2.3 字节码表/246,Black,notBold,notItalic,open,FitWidth,110
				7.2.4 Code Cache/247,Black,notBold,notItalic,open,FitWidth,337
				7.2.5 InterpreterCodelet与Stub队列/250,Black,notBold,notItalic,open,FitWidth,322
					1. InterpreterCodelet/250,Black,notBold,notItalic,open,FitWidth,476
					2. 创建Codelets/251,Black,notBold,notItalic,open,FitWidth,395
				7.2.6 Code生成器/252,Black,notBold,notItalic,open,FitWidth,661
				7.2.7 模板表与转发表/255,Black,notBold,notItalic,open,FitWidth,301
					1. 模板/255,Black,notBold,notItalic,open,FitWidth,429
					2. 创建模板表/256,Black,notBold,notItalic,open,FitWidth,629
	2.3 系统初始化/68,Black,notBold,notItalic,closed,FitWidth,515
		2.3.1 配置OS模块/69,Black,notBold,notItalic,open,FitWidth,753
		2.3.2 配置系统属性/71,Black,notBold,notItalic,open,FitWidth,572
		2.3.3 加载系统库/72,Black,notBold,notItalic,open,FitWidth,374
		2.3.4 启动线程/73,Black,notBold,notItalic,open,FitWidth,99
			1. 线程状态和类型/73,Black,notBold,notItalic,open,FitWidth,172
			2. 创建主线程/74,Black,notBold,notItalic,open,FitWidth,466
			3. 创建VMThread/75,Black,notBold,notItalic,open,FitWidth,582
			4. 创建守护线程/76,Black,notBold,notItalic,open,FitWidth,212
		2.3.5 vm_init_globals函数：初始化全局数据结构/76,Black,notBold,notItalic,open,FitWidth,316
		2.3.6 init_globals函数：初始化全局模块/76,Black,notBold,notItalic,open,FitWidth,837
			1. JMX：Management模块/77,Black,notBold,notItalic,open,FitWidth,828
			2. Code Cache/78,Black,notBold,notItalic,open,FitWidth,740
			3. StubRoutines/79,Black,notBold,notItalic,open,FitWidth,159
			4. Universe/79,Black,notBold,notItalic,open,FitWidth,320
			5. 解释器/79,Black,notBold,notItalic,open,FitWidth,445
			6. 模板表/79,Black,notBold,notItalic,open,FitWidth,545
			7. stubs/79,Black,notBold,notItalic,open,FitWidth,631
	2.4 小结/80,Black,notBold,notItalic,open,FitWidth,164
	2.4 小结/80,Black,notBold,notItalic,open,FitWidth,168
	第3章 类与对象/81,Black,notBold,notItalic,closed,FitWidth,144
		3.1 对象表示机制/82,Black,notBold,notItalic,closed,FitWidth,88
			3.1.1 OOP-Klass二分模型/82,Black,notBold,notItalic,open,FitWidth,268
			3.1.2 Oops模块/82,Black,notBold,notItalic,open,FitWidth,806
			3.1.3 OOP框架与对象访问机制/84,Black,notBold,notItalic,open,FitWidth,463
			3.1.4 Klass与instanceKlass/90,Black,notBold,notItalic,open,FitWidth,129
				1. 核心数据结构：Klass/90,Black,notBold,notItalic,open,FitWidth,693
				2. 核心数据结构：instanceKlass/92,Black,notBold,notItalic,open,FitWidth,452
				3. 实例数据的存储顺序/93,Black,notBold,notItalic,open,FitWidth,601
			3.1.5 实战：用HSDB调试HotSpot/93,Black,notBold,notItalic,open,FitWidth,806
		3.2 类的状态转化/98,Black,notBold,notItalic,closed,FitWidth,380
			3.2.1 入口：Class文件/98,Black,notBold,notItalic,closed,FitWidth,661
				1. 常量池/100,Black,notBold,notItalic,open,FitWidth,88
				2. 字段表/101,Black,notBold,notItalic,open,FitWidth,83
				3. 方法表/101,Black,notBold,notItalic,open,FitWidth,724
				4. 属性表/102,Black,notBold,notItalic,open,FitWidth,207
			3.2.2 类的状态/103,Black,notBold,notItalic,closed,FitWidth,406
				1. JVM内部定义的类状态/103,Black,notBold,notItalic,open,FitWidth,484
				2. 跟踪内部过程/104,Black,notBold,notItalic,open,FitWidth,658
				3. 性能统计/105,Black,notBold,notItalic,open,FitWidth,448
			3.2.3 加载/107,Black,notBold,notItalic,closed,FitWidth,798
				1. 初始化类加载器/107,Black,notBold,notItalic,open,FitWidth,824
				2. 加载/109,Black,notBold,notItalic,open,FitWidth,353
			3.2.4 链接/112,Black,notBold,notItalic,closed,FitWidth,390
				1. 验证/113,Black,notBold,notItalic,open,FitWidth,770
				2. 准备/114,Black,notBold,notItalic,open,FitWidth,585
				3. 解析/114,Black,notBold,notItalic,open,FitWidth,713
			3.2.5 初始化/115,Black,notBold,notItalic,open,FitWidth,759
			3.2.6 实战：类的“族谱”/118,Black,notBold,notItalic,open,FitWidth,515
			3.2.7 实战：系统字典/122,Black,notBold,notItalic,open,FitWidth,171
		3.3 创建对象/124,Black,notBold,notItalic,closed,FitWidth,777
			3.3.1 实例对象的创建流程/125,Black,notBold,notItalic,open,FitWidth,131
				1. 快速分配/126,Black,notBold,notItalic,open,FitWidth,100
				2. 慢速分配/127,Black,notBold,notItalic,open,FitWidth,96
			3.2.2 实战：探测JVM内部对象/127,Black,notBold,notItalic,open,FitWidth,480
		3.4 小结/130,Black,notBold,notItalic,open,FitWidth,132
	第4章 运行时数据区/131,Black,notBold,notItalic,closed,FitWidth,178
		4.1 堆/132,Black,notBold,notItalic,closed,FitWidth,711
			4.1.1 Java的自动内存管理/132,Black,notBold,notItalic,open,FitWidth,821
			4.1.2 堆的管理/133,Black,notBold,notItalic,open,FitWidth,227
				1. 分代/133,Black,notBold,notItalic,open,FitWidth,766
				2. Universe模块/134,Black,notBold,notItalic,open,FitWidth,376
		4.2 线程私有区域/136,Black,notBold,notItalic,closed,FitWidth,520
			4.2.1 PC/136,Black,notBold,notItalic,open,FitWidth,725
			4.2.2 JVM栈/137,Black,notBold,notItalic,open,FitWidth,233
		4.3 方法区/137,Black,notBold,notItalic,closed,FitWidth,695
			4.3.1 纽带作用/138,Black,notBold,notItalic,open,FitWidth,382
			4.3.2 常量池/141,Black,notBold,notItalic,open,FitWidth,572
			4.3.3 常量池缓存：ConstntPoolCache/144,Black,notBold,notItalic,open,FitWidth,148
			4.3.4 方法的表示：methodOop/145,Black,notBold,notItalic,open,FitWidth,835
				1. Class文件的方法表/146,Black,notBold,notItalic,open,FitWidth,164
				2. methodOop/147,Black,notBold,notItalic,open,FitWidth,313
				3. instanceKlass中的方法表/148,Black,notBold,notItalic,open,FitWidth,749
			4.3.5 方法的解析：将符号引用转换成直接引用/149,Black,notBold,notItalic,open,FitWidth,539
				1. 何时触发解析/149,Black,notBold,notItalic,open,FitWidth,539
				2. 解析类方法/150,Black,notBold,notItalic,open,FitWidth,483
				4. 解析接口方法/151,Black,notBold,notItalic,open,FitWidth,555
			4.3.6 代码放在哪里： ConstMethodOop/152,Black,notBold,notItalic,open,FitWidth,627
			4.3.7 实战：探测运行时常量池/153,Black,notBold,notItalic,open,FitWidth,827
		4.4 性能监控数据区：Perf Data/158,Black,notBold,notItalic,closed,FitWidth,86
			4.4.1 描述这段空间：PerfMemory/158,Black,notBold,notItalic,open,FitWidth,290
			4.4.2 查看/159,Black,notBold,notItalic,open,FitWidth,491
			4.4.3 生产/161,Black,notBold,notItalic,open,FitWidth,174
		4.5 转储/162,Black,notBold,notItalic,closed,FitWidth,374
			4.5.1 用VisualVM进行转储分析/162,Black,notBold,notItalic,open,FitWidth,579
			4.5.2 JVM Crash/164,Black,notBold,notItalic,open,FitWidth,518
				1. 头部信息/165,Black,notBold,notItalic,open,FitWidth,362
				2. 线程信息/166,Black,notBold,notItalic,open,FitWidth,230
				3. 进程信息/167,Black,notBold,notItalic,open,FitWidth,507
		4.6 小结/169,Black,notBold,notItalic,open,FitWidth,522
	第5章 垃圾收集/170,Black,notBold,notItalic,open,FitWidth,185
		5.1 堆与GC/171,Black,notBold,notItalic,closed,FitWidth,180
			5.1.1 垃圾收集/171,Black,notBold,notItalic,open,FitWidth,334
				1. 垃圾收集器/171,Black,notBold,notItalic,open,FitWidth,410
				2. 收集算法/172,Black,notBold,notItalic,open,FitWidth,251
			5.1.2 分代收集/173,Black,notBold,notItalic,open,FitWidth,92
				1. 分代与分代收集/173,Black,notBold,notItalic,open,FitWidth,298
				2. 分代模型/175,Black,notBold,notItalic,open,FitWidth,569
			5.1.3 快速分配/176,Black,notBold,notItalic,open,FitWidth,821
			5.1.4 栈上分配和逸出分析/178,Black,notBold,notItalic,open,FitWidth,478
			5.1.5 GC公共模块/178,Black,notBold,notItalic,open,FitWidth,709
				1. CollectedHeap/179,Black,notBold,notItalic,open,FitWidth,120
				2. GCCause模块/179,Black,notBold,notItalic,open,FitWidth,274
				3. VM_Operation、VM_GC_Operation和VM_CMS_Operation/180,Black,notBold,notItalic,open,FitWidth,140
				4. MutableSpace模块/181,Black,notBold,notItalic,open,FitWidth,162
				5. ConcurrentGCThread模块/181,Black,notBold,notItalic,open,FitWidth,162
				6. MarkSweep模块/181,Black,notBold,notItalic,open,FitWidth,162
		5.2 垃圾收集器/181,Black,notBold,notItalic,closed,FitWidth,470
			5.2.1 设计演进/181,Black,notBold,notItalic,closed,FitWidth,649
				1. 串行收集器：Serial/182,Black,notBold,notItalic,open,FitWidth,669
				2. 并行收集器：ParNew/183,Black,notBold,notItalic,open,FitWidth,126
				3. 吞吐量优先收集器：Parallel Scanvenge/183,Black,notBold,notItalic,open,FitWidth,562
				4. 堆的类型/184,Black,notBold,notItalic,open,FitWidth,813
				5. 收集策略/185,Black,notBold,notItalic,open,FitWidth,706
			5.2.2 CMS收集器/186,Black,notBold,notItalic,closed,FitWidth,598
				1. 如何找到垃圾-可达性分析/187,Black,notBold,notItalic,open,FitWidth,389
				2. 夹缝中寻找出路/189,Black,notBold,notItalic,open,FitWidth,763
			5.2.3 G1收集器/191,Black,notBold,notItalic,closed,FitWidth,481
				1. 何时使用G1/192,Black,notBold,notItalic,open,FitWidth,66
				2. 核心思路：Region/192,Black,notBold,notItalic,open,FitWidth,373
				3. Remembered Sets与Collection Sets/194,Black,notBold,notItalic,open,FitWidth,210
				4. GC工作过程/194,Black,notBold,notItalic,open,FitWidth,697
		5.3 实战：性能分析方法/195,Black,notBold,notItalic,closed,FitWidth,436
			5.3.1 获取GC日志/195,Black,notBold,notItalic,open,FitWidth,641
			5.3.2 GC监控信息/198,Black,notBold,notItalic,open,FitWidth,473
			5.3.3 内存分析工具/200,Black,notBold,notItalic,open,FitWidth,130
				1. 堆转储分析/200,Black,notBold,notItalic,open,FitWidth,130
				2. GUI工具/200,Black,notBold,notItalic,open,FitWidth,130
			5.3.4 选择合适的收集器与GC性能评估/201,Black,notBold,notItalic,open,FitWidth,305
				1. GC基本配置/201,Black,notBold,notItalic,open,FitWidth,305
				2. 量体裁衣的原则/201,Black,notBold,notItalic,open,FitWidth,792
				3. 选择CMS/203,Black,notBold,notItalic,open,FitWidth,218
				4. 选择G1和性能评估方法/204,Black,notBold,notItalic,open,FitWidth,521
			5.3.5 不要忽略JVM Crash日志/206,Black,notBold,notItalic,open,FitWidth,178
		5.4 小结/207,Black,notBold,notItalic,open,FitWidth,430
	第6章 栈/208,Black,notBold,notItalic,open,FitWidth,92
		6.1 硬件背景：了解真实机器/209,Black,notBold,notItalic,open,FitWidth,113
			6.1.1 程序是如何运行的/209,Black,notBold,notItalic,open,FitWidth,113
			6.1.2 x86与栈帧/210,Black,notBold,notItalic,open,FitWidth,364
			6.1.3 ARM对Java硬件级加速：Jazelle技术/213,Black,notBold,notItalic,open,FitWidth,632
		6.2 Java栈/214,Black,notBold,notItalic,closed,FitWidth,421
			6.2.1 寄存器式指令集与栈式指令集/214,Black,notBold,notItalic,open,FitWidth,421
			6.2.2 HotSpot中的栈/215,Black,notBold,notItalic,open,FitWidth,391
				1. 栈帧/215,Black,notBold,notItalic,open,FitWidth,724
				2. 局部变量区/216,Black,notBold,notItalic,open,FitWidth,642
				3. 操作数栈/218,Black,notBold,notItalic,open,FitWidth,94
			6.2.3 栈帧/218,Black,notBold,notItalic,open,FitWidth,735
				1. 如何描述运行时栈帧的运动/218,Black,notBold,notItalic,open,FitWidth,837
				2. 方法入口/220,Black,notBold,notItalic,open,FitWidth,212
				3. 帧内元素位置/220,Black,notBold,notItalic,open,FitWidth,832
			6.2.4 充分利用寄存器资源/221,Black,notBold,notItalic,open,FitWidth,443
			6.2.5 虚拟机如何调用Java函数/223,Black,notBold,notItalic,open,FitWidth,766
				1. 入口：JavaCalls/224,Black,notBold,notItalic,open,FitWidth,72
				2. 实际例程：CallStub/225,Black,notBold,notItalic,open,FitWidth,298
				3. Stub Routines/225,Black,notBold,notItalic,open,FitWidth,579
				4. CallStub的运行过程/228,Black,notBold,notItalic,open,FitWidth,107
			6.2.6 优化：栈顶缓存/232,Black,notBold,notItalic,open,FitWidth,142
			6.2.7 实战：操作数栈/234,Black,notBold,notItalic,open,FitWidth,363
				1. 操作数栈/234,Black,notBold,notItalic,open,FitWidth,440
				2. 栈的运动/235,Black,notBold,notItalic,open,FitWidth,669
				3. breakpoint的codelet/236,Black,notBold,notItalic,open,FitWidth,690
				4. add栈帧/237,Black,notBold,notItalic,open,FitWidth,431
				5. main的局部变量表/238,Black,notBold,notItalic,open,FitWidth,277
		6.3 小结/239,Black,notBold,notItalic,open,FitWidth,616
	第7章 解释器和即时编译器/240,Black,notBold,notItalic,open,FitWidth,183
		7.1 概述/241,Black,notBold,notItalic,open,FitWidth,264
			1. 解释器/242,Black,notBold,notItalic,open,FitWidth,104
			2. JIT编译器/242,Black,notBold,notItalic,open,FitWidth,463
		7.2 解释器如何工作/242,Black,notBold,notItalic,open,FitWidth,822
			7.2.1 Interpreter模块/243,Black,notBold,notItalic,open,FitWidth,227
			7.2.2 Code模块/245,Black,notBold,notItalic,open,FitWidth,218
			7.2.3 字节码表/246,Black,notBold,notItalic,open,FitWidth,110
			7.2.4 Code Cache/247,Black,notBold,notItalic,open,FitWidth,337
			7.2.5 InterpreterCodelet与Stub队列/250,Black,notBold,notItalic,open,FitWidth,322
				1. InterpreterCodelet/250,Black,notBold,notItalic,open,FitWidth,476
				2. 创建Codelets/251,Black,notBold,notItalic,open,FitWidth,395
			7.2.6 Code生成器/252,Black,notBold,notItalic,open,FitWidth,661
			7.2.7 模板表与转发表/255,Black,notBold,notItalic,open,FitWidth,301
				1. 模板/255,Black,notBold,notItalic,open,FitWidth,429
				2. 创建模板表/256,Black,notBold,notItalic,open,FitWidth,629
第3章 类与对象/81,Black,notBold,notItalic,closed,FitWidth,144
	3.1 对象表示机制/82,Black,notBold,notItalic,closed,FitWidth,88
		3.1.1 OOP-Klass二分模型/82,Black,notBold,notItalic,open,FitWidth,268
		3.1.2 Oops模块/82,Black,notBold,notItalic,open,FitWidth,806
		3.1.3 OOP框架与对象访问机制/84,Black,notBold,notItalic,open,FitWidth,463
		3.1.4 Klass与instanceKlass/90,Black,notBold,notItalic,open,FitWidth,129
			1. 核心数据结构：Klass/90,Black,notBold,notItalic,open,FitWidth,693
			2. 核心数据结构：instanceKlass/92,Black,notBold,notItalic,open,FitWidth,452
			3. 实例数据的存储顺序/93,Black,notBold,notItalic,open,FitWidth,601
		3.1.5 实战：用HSDB调试HotSpot/93,Black,notBold,notItalic,open,FitWidth,806
	3.2 类的状态转化/98,Black,notBold,notItalic,closed,FitWidth,380
		3.2.1 入口：Class文件/98,Black,notBold,notItalic,closed,FitWidth,661
			1. 常量池/100,Black,notBold,notItalic,open,FitWidth,88
			2. 字段表/101,Black,notBold,notItalic,open,FitWidth,83
			3. 方法表/101,Black,notBold,notItalic,open,FitWidth,724
			4. 属性表/102,Black,notBold,notItalic,open,FitWidth,207
		3.2.2 类的状态/103,Black,notBold,notItalic,closed,FitWidth,406
			1. JVM内部定义的类状态/103,Black,notBold,notItalic,open,FitWidth,484
			2. 跟踪内部过程/104,Black,notBold,notItalic,open,FitWidth,658
			3. 性能统计/105,Black,notBold,notItalic,open,FitWidth,448
		3.2.3 加载/107,Black,notBold,notItalic,closed,FitWidth,798
			1. 初始化类加载器/107,Black,notBold,notItalic,open,FitWidth,824
			2. 加载/109,Black,notBold,notItalic,open,FitWidth,353
		3.2.4 链接/112,Black,notBold,notItalic,closed,FitWidth,390
			1. 验证/113,Black,notBold,notItalic,open,FitWidth,770
			2. 准备/114,Black,notBold,notItalic,open,FitWidth,585
			3. 解析/114,Black,notBold,notItalic,open,FitWidth,713
		3.2.5 初始化/115,Black,notBold,notItalic,open,FitWidth,759
		3.2.6 实战：类的“族谱”/118,Black,notBold,notItalic,open,FitWidth,515
		3.2.7 实战：系统字典/122,Black,notBold,notItalic,open,FitWidth,171
	3.3 创建对象/124,Black,notBold,notItalic,closed,FitWidth,777
		3.3.1 实例对象的创建流程/125,Black,notBold,notItalic,open,FitWidth,131
			1. 快速分配/126,Black,notBold,notItalic,open,FitWidth,100
			2. 慢速分配/127,Black,notBold,notItalic,open,FitWidth,96
		3.2.2 实战：探测JVM内部对象/127,Black,notBold,notItalic,open,FitWidth,480
	3.4 小结/130,Black,notBold,notItalic,open,FitWidth,132
第4章 运行时数据区/131,Black,notBold,notItalic,closed,FitWidth,178
	4.1 堆/132,Black,notBold,notItalic,closed,FitWidth,711
		4.1.1 Java的自动内存管理/132,Black,notBold,notItalic,open,FitWidth,821
		4.1.2 堆的管理/133,Black,notBold,notItalic,open,FitWidth,227
			1. 分代/133,Black,notBold,notItalic,open,FitWidth,766
			2. Universe模块/134,Black,notBold,notItalic,open,FitWidth,376
	4.2 线程私有区域/136,Black,notBold,notItalic,closed,FitWidth,520
		4.2.1 PC/136,Black,notBold,notItalic,open,FitWidth,725
		4.2.2 JVM栈/137,Black,notBold,notItalic,open,FitWidth,233
	4.3 方法区/137,Black,notBold,notItalic,closed,FitWidth,695
		4.3.1 纽带作用/138,Black,notBold,notItalic,open,FitWidth,382
		4.3.2 常量池/141,Black,notBold,notItalic,open,FitWidth,572
		4.3.3 常量池缓存：ConstntPoolCache/144,Black,notBold,notItalic,open,FitWidth,148
		4.3.4 方法的表示：methodOop/145,Black,notBold,notItalic,open,FitWidth,835
			1. Class文件的方法表/146,Black,notBold,notItalic,open,FitWidth,164
			2. methodOop/147,Black,notBold,notItalic,open,FitWidth,313
			3. instanceKlass中的方法表/148,Black,notBold,notItalic,open,FitWidth,749
		4.3.5 方法的解析：将符号引用转换成直接引用/149,Black,notBold,notItalic,open,FitWidth,539
			1. 何时触发解析/149,Black,notBold,notItalic,open,FitWidth,539
			2. 解析类方法/150,Black,notBold,notItalic,open,FitWidth,483
			4. 解析接口方法/151,Black,notBold,notItalic,open,FitWidth,555
		4.3.6 代码放在哪里： ConstMethodOop/152,Black,notBold,notItalic,open,FitWidth,627
		4.3.7 实战：探测运行时常量池/153,Black,notBold,notItalic,open,FitWidth,827
	4.4 性能监控数据区：Perf Data/158,Black,notBold,notItalic,closed,FitWidth,86
		4.4.1 描述这段空间：PerfMemory/158,Black,notBold,notItalic,open,FitWidth,290
		4.4.2 查看/159,Black,notBold,notItalic,open,FitWidth,491
		4.4.3 生产/161,Black,notBold,notItalic,open,FitWidth,174
	4.5 转储/162,Black,notBold,notItalic,closed,FitWidth,374
		4.5.1 用VisualVM进行转储分析/162,Black,notBold,notItalic,open,FitWidth,579
		4.5.2 JVM Crash/164,Black,notBold,notItalic,open,FitWidth,518
			1. 头部信息/165,Black,notBold,notItalic,open,FitWidth,362
			2. 线程信息/166,Black,notBold,notItalic,open,FitWidth,230
			3. 进程信息/167,Black,notBold,notItalic,open,FitWidth,507
	4.6 小结/169,Black,notBold,notItalic,open,FitWidth,522
第5章 垃圾收集/170,Black,notBold,notItalic,closed,FitWidth,185
	5.1 堆与GC/171,Black,notBold,notItalic,closed,FitWidth,180
		5.1.1 垃圾收集/171,Black,notBold,notItalic,open,FitWidth,334
			1. 垃圾收集器/171,Black,notBold,notItalic,open,FitWidth,410
			2. 收集算法/172,Black,notBold,notItalic,open,FitWidth,251
		5.1.2 分代收集/173,Black,notBold,notItalic,open,FitWidth,92
			1. 分代与分代收集/173,Black,notBold,notItalic,open,FitWidth,298
			2. 分代模型/175,Black,notBold,notItalic,open,FitWidth,569
		5.1.3 快速分配/176,Black,notBold,notItalic,open,FitWidth,821
		5.1.4 栈上分配和逸出分析/178,Black,notBold,notItalic,open,FitWidth,478
		5.1.5 GC公共模块/178,Black,notBold,notItalic,open,FitWidth,709
			1. CollectedHeap/179,Black,notBold,notItalic,open,FitWidth,120
			2. GCCause模块/179,Black,notBold,notItalic,open,FitWidth,274
			3. VM_Operation、VM_GC_Operation和VM_CMS_Operation/180,Black,notBold,notItalic,open,FitWidth,140
			4. MutableSpace模块/181,Black,notBold,notItalic,open,FitWidth,162
			5. ConcurrentGCThread模块/181,Black,notBold,notItalic,open,FitWidth,162
			6. MarkSweep模块/181,Black,notBold,notItalic,open,FitWidth,162
	5.2 垃圾收集器/181,Black,notBold,notItalic,closed,FitWidth,470
		5.2.1 设计演进/181,Black,notBold,notItalic,closed,FitWidth,649
			1. 串行收集器：Serial/182,Black,notBold,notItalic,open,FitWidth,669
			2. 并行收集器：ParNew/183,Black,notBold,notItalic,open,FitWidth,126
			3. 吞吐量优先收集器：Parallel Scanvenge/183,Black,notBold,notItalic,open,FitWidth,562
			4. 堆的类型/184,Black,notBold,notItalic,open,FitWidth,813
			5. 收集策略/185,Black,notBold,notItalic,open,FitWidth,706
		5.2.2 CMS收集器/186,Black,notBold,notItalic,closed,FitWidth,598
			1. 如何找到垃圾-可达性分析/187,Black,notBold,notItalic,open,FitWidth,389
			2. 夹缝中寻找出路/189,Black,notBold,notItalic,open,FitWidth,763
		5.2.3 G1收集器/191,Black,notBold,notItalic,closed,FitWidth,481
			1. 何时使用G1/192,Black,notBold,notItalic,open,FitWidth,66
			2. 核心思路：Region/192,Black,notBold,notItalic,open,FitWidth,373
			3. Remembered Sets与Collection Sets/194,Black,notBold,notItalic,open,FitWidth,210
			4. GC工作过程/194,Black,notBold,notItalic,open,FitWidth,697
	5.3 实战：性能分析方法/195,Black,notBold,notItalic,closed,FitWidth,436
		5.3.1 获取GC日志/195,Black,notBold,notItalic,open,FitWidth,641
		5.3.2 GC监控信息/198,Black,notBold,notItalic,open,FitWidth,473
		5.3.3 内存分析工具/200,Black,notBold,notItalic,open,FitWidth,130
			1. 堆转储分析/200,Black,notBold,notItalic,open,FitWidth,130
			2. GUI工具/200,Black,notBold,notItalic,open,FitWidth,130
		5.3.4 选择合适的收集器与GC性能评估/201,Black,notBold,notItalic,open,FitWidth,305
			1. GC基本配置/201,Black,notBold,notItalic,open,FitWidth,305
			2. 量体裁衣的原则/201,Black,notBold,notItalic,open,FitWidth,792
			3. 选择CMS/203,Black,notBold,notItalic,open,FitWidth,218
			4. 选择G1和性能评估方法/204,Black,notBold,notItalic,open,FitWidth,521
		5.3.5 不要忽略JVM Crash日志/206,Black,notBold,notItalic,open,FitWidth,178
	5.4 小结/207,Black,notBold,notItalic,open,FitWidth,430
第6章 栈/208,Black,notBold,notItalic,closed,FitWidth,92
	6.1 硬件背景：了解真实机器/209,Black,notBold,notItalic,open,FitWidth,113
		6.1.1 程序是如何运行的/209,Black,notBold,notItalic,open,FitWidth,113
		6.1.2 x86与栈帧/210,Black,notBold,notItalic,open,FitWidth,364
		6.1.3 ARM对Java硬件级加速：Jazelle技术/213,Black,notBold,notItalic,open,FitWidth,632
	6.2 Java栈/214,Black,notBold,notItalic,closed,FitWidth,421
		6.2.1 寄存器式指令集与栈式指令集/214,Black,notBold,notItalic,open,FitWidth,421
		6.2.2 HotSpot中的栈/215,Black,notBold,notItalic,open,FitWidth,391
			1. 栈帧/215,Black,notBold,notItalic,open,FitWidth,724
			2. 局部变量区/216,Black,notBold,notItalic,open,FitWidth,642
			3. 操作数栈/218,Black,notBold,notItalic,open,FitWidth,94
		6.2.3 栈帧/218,Black,notBold,notItalic,open,FitWidth,735
			1. 如何描述运行时栈帧的运动/218,Black,notBold,notItalic,open,FitWidth,837
			2. 方法入口/220,Black,notBold,notItalic,open,FitWidth,212
			3. 帧内元素位置/220,Black,notBold,notItalic,open,FitWidth,832
		6.2.4 充分利用寄存器资源/221,Black,notBold,notItalic,open,FitWidth,443
		6.2.5 虚拟机如何调用Java函数/223,Black,notBold,notItalic,open,FitWidth,766
			1. 入口：JavaCalls/224,Black,notBold,notItalic,open,FitWidth,72
			2. 实际例程：CallStub/225,Black,notBold,notItalic,open,FitWidth,298
			3. Stub Routines/225,Black,notBold,notItalic,open,FitWidth,579
			4. CallStub的运行过程/228,Black,notBold,notItalic,open,FitWidth,107
		6.2.6 优化：栈顶缓存/232,Black,notBold,notItalic,open,FitWidth,142
		6.2.7 实战：操作数栈/234,Black,notBold,notItalic,open,FitWidth,363
			1. 操作数栈/234,Black,notBold,notItalic,open,FitWidth,440
			2. 栈的运动/235,Black,notBold,notItalic,open,FitWidth,669
			3. breakpoint的codelet/236,Black,notBold,notItalic,open,FitWidth,690
			4. add栈帧/237,Black,notBold,notItalic,open,FitWidth,431
			5. main的局部变量表/238,Black,notBold,notItalic,open,FitWidth,277
	6.3 小结/239,Black,notBold,notItalic,open,FitWidth,616
第7章 解释器和即时编译器/240,Black,notBold,notItalic,closed,FitWidth,183
	7.1 概述/241,Black,notBold,notItalic,open,FitWidth,264
		1. 解释器/242,Black,notBold,notItalic,open,FitWidth,104
		2. JIT编译器/242,Black,notBold,notItalic,open,FitWidth,463
	7.2 解释器如何工作/242,Black,notBold,notItalic,closed,FitWidth,822
		7.2.1 Interpreter模块/243,Black,notBold,notItalic,open,FitWidth,227
		7.2.2 Code模块/245,Black,notBold,notItalic,open,FitWidth,218
		7.2.3 字节码表/246,Black,notBold,notItalic,open,FitWidth,110
		7.2.4 Code Cache/247,Black,notBold,notItalic,open,FitWidth,337
		7.2.5 InterpreterCodelet与Stub队列/250,Black,notBold,notItalic,open,FitWidth,322
			1. InterpreterCodelet/250,Black,notBold,notItalic,open,FitWidth,476
			2. 创建Codelets/251,Black,notBold,notItalic,open,FitWidth,395
		7.2.6 Code生成器/252,Black,notBold,notItalic,open,FitWidth,661
		7.2.7 模板表与转发表/255,Black,notBold,notItalic,open,FitWidth,301
			1. 模板/255,Black,notBold,notItalic,open,FitWidth,429
			2. 创建模板表/256,Black,notBold,notItalic,open,FitWidth,629
			3. 创建转发表/257,Black,notBold,notItalic,open,FitWidth,425
		7.2.8 实战：InterpreterCodelet/258,Black,notBold,notItalic,open,FitWidth,499
	7.3 即时编译器/261,Black,notBold,notItalic,closed,FitWidth,388
		7.3.1 概述/261,Black,notBold,notItalic,open,FitWidth,591
		7.3.2 编译器模块/262,Black,notBold,notItalic,open,FitWidth,795
		7.3.3 编译器的基本结构/263,Black,notBold,notItalic,closed,FitWidth,702
			1. IR/264,Black,notBold,notItalic,open,FitWidth,406
			2. CFG/264,Black,notBold,notItalic,open,FitWidth,740
			3. SSA/265,Black,notBold,notItalic,open,FitWidth,167
			4. 寄存器分配/265,Black,notBold,notItalic,open,FitWidth,240
			5. 编译目标/265,Black,notBold,notItalic,open,FitWidth,333
			6. 编译过程实现/265,Black,notBold,notItalic,open,FitWidth,388
		7.3.4 实战：编译原理实践，了解编译中间环节/266,Black,notBold,notItalic,open,FitWidth,591
			1. 如何跟踪编译过程/267,Black,notBold,notItalic,open,FitWidth,369
			2. 自己动手分析编译过程/268,Black,notBold,notItalic,open,FitWidth,111
	7.4 小结/278,Black,notBold,notItalic,closed,FitWidth,296
第8章 指令集/279,Black,notBold,notItalic,closed,FitWidth,129
	8.1 再说栈式指令集/279,Black,notBold,notItalic,closed,FitWidth,704
	8.2 数据传送/281,Black,notBold,notItalic,open,FitWidth,369
		8.2.1 局部变量、常量池和操作数栈之间的数据传送/281,Black,notBold,notItalic,closed,FitWidth,369
		8.2.2 数据传送指令/283,Black,notBold,notItalic,closed,FitWidth,388
			1. iload_<n>指令分析/283,Black,notBold,notItalic,closed,FitWidth,501
			2. iconst_<n>指令分析/286,Black,notBold,notItalic,closed,FitWidth,555
			3. istore_<n>指令分析/286,Black,notBold,notItalic,closed,FitWidth,778
		8.2.3 实战：数组的越界检查/288,Black,notBold,notItalic,closed,FitWidth,240
	8.3 类型转换/290,Black,notBold,notItalic,closed,FitWidth,481
	8.4 对象和创建和操作/292,Black,notBold,notItalic,closed,FitWidth,129
	8.5 程序流程控制/293,Black,notBold,notItalic,closed,FitWidth,259
		8.5.1 控制转移指令/293,Black,notBold,notItalic,closed,FitWidth,259
		8.5.2 条件转移/294,Black,notBold,notItalic,closed,FitWidth,462
		8.5.3 无条件转移/295,Black,notBold,notItalic,closed,FitWidth,129
		8.5.4 复合条件转移/296,Black,notBold,notItalic,closed,FitWidth,665
		8.5.5 实战：switch语句如何使用String/298,Black,notBold,notItalic,closed,FitWidth,92
	8.6 运算/301,Black,notBold,notItalic,open,FitWidth,185
		8.6.1 加法：iadd/301,Black,notBold,notItalic,closed,FitWidth,721
		8.6.2 取负：ineg/302,Black,notBold,notItalic,closed,FitWidth,832
	8.7 函数的调用和返回/303,Black,notBold,notItalic,closed,FitWidth,740
		8.7.1 Java函数分发机制：VTABLE与ITABLE/304,Black,notBold,notItalic,closed,FitWidth,777
		8.7.1 invoke系列指令/308,Black,notBold,notItalic,closed,FitWidth,55
		8.7.3 动态分发：覆盖/310,Black,notBold,notItalic,closed,FitWidth,499
		8.7.4 静态分发： 重载/313,Black,notBold,notItalic,closed,FitWidth,591
	8.8 异常/316,Black,notBold,notItalic,closed,FitWidth,573
		8.8.1 异常表/316,Black,notBold,notItalic,closed,FitWidth,573
		8.8.2 创建异常/317,Black,notBold,notItalic,open,FitWidth,240
			1. 创建异常对象/317,Black,notBold,notItalic,closed,FitWidth,351
			2. athrow/319,Black,notBold,notItalic,closed,FitWidth,204
		8.8.3 try-catch/320,Black,notBold,notItalic,closed,FitWidth,148
		8.8.4 finally/322,Black,notBold,notItalic,closed,FitWidth,388
	8.9 小结/323,Black,notBold,notItalic,closed,FitWidth,665
第9章 虚拟机监控工具/324,Black,notBold,notItalic,closed,FitWidth,167
	9.1 Attach机制/325,Black,notBold,notItalic,open,FitWidth,185
		9.1.1 AttachProvider与VirtualMachine/325,Black,notBold,notItalic,closed,FitWidth,555
		9.1.2 命令的下发：execute()/328,Black,notBold,notItalic,closed,FitWidth,92
		9.1.3 命令的执行：Attach Listener守护线程/330,Black,notBold,notItalic,closed,FitWidth,369
	9.2 查看JVM进程/331,Black,notBold,notItalic,open,FitWidth,92
		9.2.1 用jps查看java进程/331,Black,notBold,notItalic,closed,FitWidth,240
		9.2.2 实战：定制jps，允许查看库路径/334,Black,notBold,notItalic,open,FitWidth,185
			1. 新增参数/334,Black,notBold,notItalic,closed,FitWidth,333
			2. 新增工具方法/335,Black,notBold,notItalic,closed,FitWidth,536
			3. 实现主程序/336,Black,notBold,notItalic,closed,FitWidth,573
	9.3 查看和配置JVM/337,Black,notBold,notItalic,open,FitWidth,462
		9.3.1 用jinfo查看JVM参数配置/337,Black,notBold,notItalic,open,FitWidth,555
			1. -flags选项/338,Black,notBold,notItalic,closed,FitWidth,665
			2. -sysprops选项/339,Black,notBold,notItalic,closed,FitWidth,444
		9.3.2 实战：扩展flags选项，允许查看命令行参数/341,Black,notBold,notItalic,open,FitWidth,74
			1. 增加输出java命令行参数/341,Black,notBold,notItalic,closed,FitWidth,167
			2. 输出更丰富的信息/341,Black,notBold,notItalic,closed,FitWidth,591
	9.4 堆内存转储工具/343,Black,notBold,notItalic,open,FitWidth,296
		9.4.1 Heap Dump/343,Black,notBold,notItalic,closed,FitWidth,481
		9.4.2 原理/344,Black,notBold,notItalic,open,FitWidth,591
			1. 无选项/344,Black,notBold,notItalic,closed,FitWidth,702
			2. "-heap"选项/345,Black,notBold,notItalic,closed,FitWidth,369
			3. "-histo"选项/346,Black,notBold,notItalic,closed,FitWidth,628
			4. "-permstat"选项/346,Black,notBold,notItalic,closed,FitWidth,628
			5. "-finalizerinfo"选项/347,Black,notBold,notItalic,closed,FitWidth,702
			6. "-dump"选项/347,Black,notBold,notItalic,closed,FitWidth,777
	9.5 堆转储分析/348,Black,notBold,notItalic,open,FitWidth,388
		9.5.1 Heap Dump分析工具：jhat/348,Black,notBold,notItalic,closed,FitWidth,777
		9.5.2 实战：MAT分析过程/351,Black,notBold,notItalic,open,FitWidth,628
			1. 生成Heap Dump/351,Black,notBold,notItalic,closed,FitWidth,628
			2. 查看对象分配了多少空间/352,Black,notBold,notItalic,closed,FitWidth,425
			3. 内存泄露/352,Black,notBold,notItalic,closed,FitWidth,684
	9.6 线程转储分析/354,Black,notBold,notItalic,open,FitWidth,462
		9.6.1 jstack/354,Black,notBold,notItalic,closed,FitWidth,628
		9.6.2 实战：如何分析资源等待/355,Black,notBold,notItalic,open,FitWidth,758
			1. 获取线程转储信息/356,Black,notBold,notItalic,closed,FitWidth,204
			2. 判断是否死锁/356,Black,notBold,notItalic,closed,FitWidth,204
			3. 定位资源瓶颈/356,Black,notBold,notItalic,closed,FitWidth,204
			4. 对症下药/357,Black,notBold,notItalic,closed,FitWidth,111
	9.7 小结/358,Black,notBold,notItalic,closed,FitWidth,55
